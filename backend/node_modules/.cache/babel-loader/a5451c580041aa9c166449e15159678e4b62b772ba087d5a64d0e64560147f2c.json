{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\OMS LinhNguyen-301265700\\\\backend\\\\src\\\\components\\\\UpdateObject.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateObject = ({\n  match\n}) => {\n  _s();\n  const userId = match.params.userId;\n  const [userData, setUserData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [updateTime, setUpdateTime] = useState(null);\n  useEffect(() => {\n    const fetchUserDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/users/${userId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setUserData(data.data);\n        } else {\n          console.error(\"Failed to fetch user details\");\n        }\n      } catch (error) {\n        console.error(\"Error during user details fetch:\", error);\n      }\n    };\n    fetchUserDetails();\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData(prevUserData => ({\n      ...prevUserData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Remove properties with empty values\n    const updatedUserData = Object.fromEntries(Object.entries(userData).filter(([key, value]) => value.trim() !== \"\"));\n    try {\n      const response = await fetch(`http://localhost:3000/api/users/${userId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedUserData)\n      });\n      if (!response.ok) {\n        console.error(\"User update failed\");\n        return;\n      }\n      const updatedUserDataWithTime = await response.json();\n      setUserData(updatedUserDataWithTime.data);\n      setUpdateTime(updatedUserDataWithTime.data.updatedAt);\n\n      // Handle success (show a success message)\n    } catch (error) {\n      console.error(\"Error during user update:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: userData.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: userData.email,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: userData.password,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), updateTime && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Updated at: \", updateTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateObject, \"hOHaEbXTSV0NZFASuSZD2oUB/zg=\");\n_c = UpdateObject;\nexport default UpdateObject;\nvar _c;\n$RefreshReg$(_c, \"UpdateObject\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UpdateObject","match","_s","userId","params","userData","setUserData","name","email","password","updateTime","setUpdateTime","fetchUserDetails","response","fetch","ok","data","json","console","error","handleInputChange","e","value","target","prevUserData","handleSubmit","preventDefault","updatedUserData","Object","fromEntries","entries","filter","key","trim","method","headers","body","JSON","stringify","updatedUserDataWithTime","updatedAt","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/OMS LinhNguyen-301265700/backend/src/components/UpdateObject.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst UpdateObject = ({ match }) => {\r\n  const userId = match.params.userId;\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [updateTime, setUpdateTime] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserDetails = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3000/api/users/${userId}`\r\n        );\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setUserData(data.data);\r\n        } else {\r\n          console.error(\"Failed to fetch user details\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error during user details fetch:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserDetails();\r\n  }, [userId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserData((prevUserData) => ({\r\n      ...prevUserData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Remove properties with empty values\r\n    const updatedUserData = Object.fromEntries(\r\n      Object.entries(userData).filter(([key, value]) => value.trim() !== \"\")\r\n    );\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3000/api/users/${userId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(updatedUserData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        console.error(\"User update failed\");\r\n        return;\r\n      }\r\n\r\n      const updatedUserDataWithTime = await response.json();\r\n      setUserData(updatedUserDataWithTime.data);\r\n      setUpdateTime(updatedUserDataWithTime.data.updatedAt);\r\n\r\n      // Handle success (show a success message)\r\n    } catch (error) {\r\n      console.error(\"Error during user update:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update User</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={userData.name}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={userData.email}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={userData.password}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Update User</button>\r\n      </form>\r\n\r\n      {updateTime && <p>Updated at: {updateTime}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateObject;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}